class Solution {
    ListNode reverse(ListNode head){
        ListNode prev = null;
        ListNode curr = head;
        ListNode next;
        while(curr != null){
            next = curr.next;
            curr.next = prev ;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode list1 = reverse(l1);
        ListNode list2 = reverse(l2);
        ListNode dummy = new ListNode(0);
        ListNode list = dummy;
        int carry = 0;
        while(list1 != null || list2 != null || carry != 0){
            int val1 = (list1 != null)?list1.val:0;
            int val2 = (list2 != null)?list2.val:0;
            int sum = val1+val2+carry;
            int digit = sum % 10;
            carry = sum/10;

            ListNode newNode = new ListNode(digit);
            list.next = newNode;
            list = list.next;

            list1 = (list1 != null)?list1.next:null;
            list2 = (list2 != null)?list2.next:null;
        }
        return reverse(dummy.next);
    }
}
