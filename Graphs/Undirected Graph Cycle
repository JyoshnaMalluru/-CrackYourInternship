class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean vis[] = new boolean[V];
        for(int i=0;i<V;i++){
            if(!vis[i]){
                 if(isCycleUtil(adj,i,-1,vis)){
                    return true;
                }   
            }
        }
        return false;
    }
    public boolean isCycleUtil(ArrayList<ArrayList<Integer>> adj,int curr,int par,boolean vis[]){
        vis[curr]=true;
        for(int i=0;i<adj.get(curr).size();i++){
            Integer next = adj.get(curr).get(i);
            if(!vis[next]){
              if(isCycleUtil(adj,next,curr,vis)){
                return true;
              } 
            }else if(vis[next] && next!=par){
                  return true;
            } 
        }
        return false;
    }
}
    
