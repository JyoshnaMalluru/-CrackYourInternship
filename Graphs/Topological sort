class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        boolean[] vis = new boolean[V];
        Stack<Integer> stk = new Stack<>();
        int arr[] = new int[V];
        for(int i=0;i<V;i++){
            if(!vis[i]){
                topSortUtil(adj,i,vis,stk);
            }
        }
        int i=0;
        while(!stk.isEmpty()){
            arr[i] = stk.pop();
            i++;
        }
        return arr;
    }
    
    public static void topSortUtil(ArrayList<ArrayList<Integer>> adj,int curr,boolean vis[],Stack<Integer> stk){
        vis[curr] = true;
        for(int i=0;i<adj.get(curr).size();i++){
            Integer e = adj.get(curr).get(i);
            if(!vis[e]){
                topSortUtil(adj,e,vis,stk);
            }
        }
        stk.push(curr);
    }
}
